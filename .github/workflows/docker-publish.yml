name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - '**'

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile
          fi

  push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    env:
      # TODO: Change variable to your image's name.
      IMAGE_NAME: "cgerull/testserver"
      TAG: "latest"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_SECRET }}
      - name: Set image name and version
        run: |
          echo "ref ${{ github.ref }}"
          # Strip git ref prefix from version
          VER=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          echo "first VER $VER"
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VER=$(echo $VER | sed -e 's/^v//')
          echo "second VER $VER"
          # Use Docker `latest` tag convention
          [["$VER" =~ [0-9].* ]] && echo "TAG=SVER" >> $GITHUB_ENV

          echo TAG $VER
          # echo "TAG=SVER" >> $GITHUB_ENV
      - name: Print env
        run: |
          echo "Image: env.IMAGE_NAME"
          echo "Tag: env.TAG"
      # - name: Build and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     platforms: linux/amd64,linux/arm64,linux/arm/v7
      #     push: true
      #     tags: env.IMAGE_NAME:env.TAG
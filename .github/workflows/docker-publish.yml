name: Docker-deploy
on:
#   pull_request:
#     branches: [ "master" ]
  release:
    # Publish tagged image.
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_PATH: "cgerull/testserver"
      IMAGE_TAG: "null"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_SECRET }}
      - name: Set image tag
        run: |
          # Strip git ref prefix from version
          if [ $(echo "${{ github.ref }}" | grep tags) ]; then
            VER=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,' | sed -e 's/^v//')
            echo "Found TAG $VER"
          else
            VER=latest
            echo "No TAG found, Use latest"
          fi
          echo "IMAGE_TAG=$VER" >> $GITHUB_ENV
      - name: Build new image name
        run: |
          IMAGE_NAME="${{ env.IMAGE_PATH }}:${{ env.IMAGE_TAG }}"
          echo "IMAGE_NAME - $IMAGE_NAME"
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
      - name: Print GitHub environment
        run: |
          echo "IMAGE_PATH - ${{ env.IMAGE_PATH }}"
          echo "IMAGE_TAG - ${{ env.IMAGE_TAG }}"
          echo "IMAGE_NAME - ${{ env.IMAGE_NAME }}"
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          build-args: ${{ env.IMAGE_TAG}}
          tags: ${{ env.IMAGE_NAME }}

name: Docker-push
on:
  pull_request:
  release:
    # Publish tagged image.
    types: [published]


jobs:
   # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  
  test-image:
    name: Docker-build-test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          make build
          
  deploy:
    needs: test-image
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: "cgerull/testserver"
      TAG: "latest"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_SECRET }}
      - name: Set image name and version
        run: |
          # # Strip git ref prefix from version
          if [ $(echo "${{ github.ref }}" | grep tags) ]; then
            VER=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,' | sed -e 's/^v//')
            echo "Found TAG"
          else
            VER=latest
            echo "No TAG found, Use latest"
          fi
          echo "Use TAG - $VER"
          echo "TAG=$VER" >> $GITHUB_ENV
          
          IMAGE="${{ env.IMAGE_NAME }}:${{ env.TAG }}"
          echo "Use image tag - $IMAGE"
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

          echo "Image name - ${{ env.IMAGE }}"
          echo "Version - ${{ env.TAG }}"

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          build-args: ${{ env.TAG}}
          tags: ${{ env.IMAGE }}